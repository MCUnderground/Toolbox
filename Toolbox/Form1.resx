<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTool1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3WAAAN1gGQb3mcAAAAAmJL
        R0QAAKqNIzIAAAAHdElNRQfjBg8DACCyD7jrAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE5LTA2LTE1VDAx
        OjAwOjMyKzAyOjAw2r4HjQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxOS0wNi0xNVQwMTowMDozMiswMjow
        MKvjvzEAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAC1UlEQVR4Xu3dP0uVcRyG
        8cdEKWipplqitpqMhiIaWiqwpQKH3kBFU/8ol95AryFoKGitJQhaQhBaHISsQXNoCLQaAgXT/txfAyO7
        D7me331d8FluT8E5v+PjUQ/YEREREREREREREREREVFYAzIoQzLckLo/pe5b3Ufq0W45IudkrCEX5awc
        lZ1CmzopT+ST/GzcikzKFaknQ/QVYZvckTmpB+aHuAetNauyJNNyXmKvCtdkXtbEPVCtqyfCRxmXvRLV
        QXkr9SC4BydJPQluyz6JqZ71dRl0D0iiWbkkMV8OJoTP/j++y1M5JhEtSsqLvq36LDelvh1uPj77vRdy
        SprP3Xl03Re5J3uk6dydx28v5bQ03Qf0VD8gui47pNnqMofeLkjEi0EiIiIiIkppCk17Lc/lvpyRem/k
        X9WbQNCub7Is9Ta/GXkgh2Qj9yNQtKl+1V2/43gmh2U9d0O07as8ku1ib4C21fs/FmRU7A3Qvnr390Ox
        H0T76gXiO7EfRPvqy0C9Gdh+EDnsiBx2RA47IocdkcOOyGFH5LAjctgROeyIHHZEDjsihx2Rw47IYUfk
        sCNy2BE57IgcdkQOOyKHHZHDjshhR+SwI3LYETnsiBx2RA47IocdkcOOyGFH5LAjctgROeyIHHZEDjsi
        hx2Rw47IYUfksCNy2BE57IgcdkQOOyKHHZHDjshhR+SwI3LYETnsiBx2RA47IocdkcOOyGFH5LAjctgR
        OeyIHHZEDjsihx2Rw47I0a1uGpCjzr5blPpb8u4GaFed+YJ0E8JVIE+d+SvpxmVJ3I3Qrjrzu9Ltlxnh
        KpCjzvqNHJD1rsq8rIn7B2hHnfF7uSwbDcgtmZMV4UVhe+pM62xn5YbUmf/TCXks9Z2B+0/Qv+pM62yP
        y3/bJSMyKmPoa3WGdZZ1pluuLg+DMiTD6Gt1hnWW9pJPRERERERERERERERERG3Wdb8AJ5PlPNONHC0A
        AAAASUVORK5CYII=
</value>
  </data>
</root>